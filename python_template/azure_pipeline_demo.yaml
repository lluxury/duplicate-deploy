trigger:
  branches:
    include:
      - main
      - develop
  paths:
    exclude:
      - README.md
      - docs/*

variables:
  - name: imageName
    value: myapp
  - group: SonarQubeCredentials
  - name: helmChartPath
    value: ./helm/charts/mychart

pool:
  vmImage: 'ubuntu-latest'

steps:
  - checkout: self

  - script: |
      echo "Starting build"
      npm install
      npm run build
    displayName: 'Build application'

  - task: SonarQubePrepare@4
    inputs:
      SonarQube: 'MySonarQubeServiceConnection'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: 'my-project'
      cliSources: 'src'

  - script: sonar-scanner
    displayName: 'Run SonarQube analysis'

  - task: SonarQubePublish@4
    inputs:
      pollingTimeoutSec: '300'

  - task: SonarQubeBuildBreaker@4
    inputs:
      endpoint: 'MySonarQubeServiceConnection'

  - script: |
      docker build -t $(imageName) .
      docker push $(imageName)
    displayName: 'Build and push Docker image'

  - task: HelmInstaller@1
    inputs:
      helmVersionToInstall: 'latest'

  - script: |
      helm upgrade --install myrelease $(helmChartPath)
      helm package $(helmChartPath)
      helm push mychart*.tgz myrepo
    displayName: 'Helm install and push'

  - script: |
      twistcli images scan --address https://twistlock.example.com --user twistlock_user --password $(twistlock_password) --dockerfile Dockerfile .
    displayName: 'Twistlock image scan'

  - script: git clean -fdx
    displayName: 'Clean repository'